wrap(String str, int wrapLength, String newLineStr, boolean wrapLongWords, String wrapOn)
<p>Wraps a single line of text, identifying words by <code>wrapOn<code>.<p>

<p>Leading spaces on a new line are stripped.
Trailing spaces are not stripped.<p>

<table border="1">
<caption>Examples<caption>
<tr>
<th>input<th>
<th>wrapLength<th>
<th>newLineString<th>
<th>wrapLongWords<th>
<th>wrapOn<th>
<th>result<th>
<tr>
<tr>
<td>null<td>
<td><td>
<td><td>
<td>truefalse<td>
<td><td>
<td>null<td>
<tr>
<tr>
<td>""<td>
<td><td>
<td><td>
<td>truefalse<td>
<td><td>
<td>""<td>
<tr>
<tr>
<td>"Here is one line of text that is going to be wrapped after 20 columns."<td>
<td>20<td>
<td>"\n"<td>
<td>truefalse<td>
<td>" "<td>
<td>"Here is one line of\ntext that is going\nto be wrapped after\n20 columns."<td>
<tr>
<tr>
<td>"Here is one line of text that is going to be wrapped after 20 columns."<td>
<td>20<td>
<td>"&lt;br &gt;"<td>
<td>truefalse<td>
<td>" "<td>
<td>"Here is one line of&lt;br &gt;text that is going&lt;br &gt;to be wrapped after&lt;br &gt;20 columns."<td>
<tr>
<tr>
<td>"Here is one line of text that is going to be wrapped after 20 columns."<td>
<td>20<td>
<td>null<td>
<td>truefalse<td>
<td>" "<td>
<td>"Here is one line of" + systemNewLine + "text that is going" + systemNewLine + "to be wrapped after" + systemNewLine + "20 columns."<td>
<tr>
<tr>
<td>"Click here to jump to the commons website - http:commons.apache.org"<td>
<td>20<td>
<td>"\n"<td>
<td>false<td>
<td>" "<td>
<td>"Click here to jump\nto the commons\nwebsite -\nhttp:commons.apache.org"<td>
<tr>
<tr>
<td>"Click here to jump to the commons website - http:commons.apache.org"<td>
<td>20<td>
<td>"\n"<td>
<td>true<td>
<td>" "<td>
<td>"Click here to jump\nto the commons\nwebsite -\nhttp:commons.apach\ne.org"<td>
<tr>
<tr>
<td>"flammableinflammable"<td>
<td>20<td>
<td>"\n"<td>
<td>true<td>
<td>""<td>
<td>"flammable\ninflammable"<td>
<tr>
<table>
@param str the String to be word wrapped, may be null
@param wrapLength the column to wrap the words at, less than 1 is treated as 1
@param newLineStr the string to insert for a new line, <code>null<code> uses the system property line separator
@param wrapLongWords true if long words (such as URLs) should be wrapped 
@param wrapOn regex expression to be used as a breakable characters, if blank string is provided a space character will be used
@return a line with newlines inserted, <code>null<code> if null input