import junit.framework.TestCase;

public class UrlValidatorTest extends TestCase {

    UrlValidator validator = new UrlValidator();

    public void testUrl() {
        assertEquals(true, validator.isValid("http://localhost/test/index.html"));
        assertEquals(true, validator.isValid("http://hostname"));
        assertEquals(true, validator.isValid("http://hostname/test/index.html"));
        assertEquals(true, validator.isValid("http://localhost/test/index.html"));
        assertEquals(false, validator.isValid("http://first.my-testing/test/index.html"));
        assertEquals(false, validator.isValid("http://broke.hostname/test/index.html"));
        assertEquals(true, validator.isValid("http://www.apache.org/test/index.html"));
        assertEquals(false, validator.isValid("http://hostname"));
        assertEquals(false, validator.isValid("http://localhost/test/index.html"));
        assertEquals(true, validator.isValid("http://www.apache.org/test/index.html"));
        assertEquals(false, validator.isValid("http://example.com/serach?address=Main Avenue"));
        assertEquals(true, validator.isValid("http://example.com/serach?address=Main%20Avenue"));
        assertEquals(true, validator.isValid("http://example.com/serach?address=Main+Avenue"));
        assertEquals(true, validator.isValid("http://tech.yahoo.com/rc/desktops/102;_ylt=Ao8yevQHlZ4On0O3ZJGXLEQFLZA5"));
        assertEquals(true, validator.isValid("http://example.rocks:/"));
        assertEquals(true, validator.isValid("http://example.rocks:0/"));
        assertEquals(true, validator.isValid("http://example.rocks:65535/"));
        assertEquals(false, validator.isValid("http://example.rocks:65536/"));
        assertEquals(false, validator.isValid("http://example.rocks:100000/"));
        assertEquals(true, validator.isValid("http://example.rocks/"));
        assertEquals(true, validator.isValid("http://example.rocks"));
        assertEquals(true, validator.isValid("ftp://username:password@example.com:8042/over/there/index.dtb?type=animal&name=narwhal#nose"));
        assertEquals(true, validator.isValid("file:/C:/path/to/dir/"));
        assertEquals(true, validator.isValid("http://xn--h1acbxfam.idn.icann.org/"));
        assertEquals(true, validator.isValid("http://test.xn--lgbbat1ad8j"));
        assertEquals(true, validator.isValid("http://test.xn--fiqs8s"));
        assertEquals(true, validator.isValid("http://test.xn--fiqz9s"));
        assertEquals(true, validator.isValid("http://test.xn--wgbh1c"));
        assertEquals(true, validator.isValid("http://test.xn--j6w193g"));
        assertEquals(true, validator.isValid("http://test.xn--h2brj9c"));
        assertEquals(true, validator.isValid("http://test.xn--mgbbh1a71e"));
        assertEquals(true, validator.isValid("http://test.xn--fpcrj9c3d"));
        assertEquals(true, validator.isValid("http://test.xn--gecrj9c"));
        assertEquals(true, validator.isValid("http://test.xn--s9brj9c"));
        assertEquals(true, validator.isValid("http://test.xn--xkc2dl3a5ee0h"));
        assertEquals(true, validator.isValid("http://test.xn--45brj9c"));
        assertEquals(true, validator.isValid("http://test.xn--mgba3a4f16a"));
        assertEquals(true, validator.isValid("http://test.xn--mgbayh7gpa"));
        assertEquals(true, validator.isValid("http://test.xn--mgbc0a9azcg"));
        assertEquals(true, validator.isValid("http://test.xn--ygbi2ammx"));
        assertEquals(true, validator.isValid("http://test.xn--wgbl6a"));
        assertEquals(true, validator.isValid("http://test.xn--p1ai"));
        assertEquals(true, validator.isValid("http://test.xn--mgberp4a5d4ar"));
        assertEquals(true, validator.isValid("http://test.xn--90a3ac"));
        assertEquals(true, validator.isValid("http://test.xn--yfro4i67o"));
        assertEquals(true, validator.isValid("http://test.xn--clchc0ea0b2g2a9gcd"));
        assertEquals(true, validator.isValid("http://test.xn--3e0b707e"));
        assertEquals(true, validator.isValid("http://test.xn--fzc2c9e2c"));
        assertEquals(true, validator.isValid("http://test.xn--xkc2al3hye2a"));
        assertEquals(true, validator.isValid("http://test.xn--ogbpf8fl"));
        assertEquals(true, validator.isValid("http://test.xn--kprw13d"));
        assertEquals(true, validator.isValid("http://test.xn--kpry57d"));
        assertEquals(true, validator.isValid("http://test.xn--o3cw4h"));
        assertEquals(true, validator.isValid("http://test.xn--pgbs0dh"));
        assertEquals(true, validator.isValid("http://test.xn--mgbaam7a8h"));
        assertEquals(true, validator.isValid("http://xn--d1abbgf6aiiy.xn--p1ai"));
        assertEquals(false, validator.isValid("http://www.\ufffd.ch"));
        assertEquals(false, validator.isValid("ftp://www.\ufffd.ch"));
        assertEquals(true, validator.isValid("http://hello.tokyo/"));
        assertEquals(true, validator.isValid("http://www.example.org/a/b/hello..world"));
        assertEquals(true, validator.isValid("http://www.example.org/a/hello..world"));
        assertEquals(true, validator.isValid("http://www.example.org/hello.world/"));
        assertEquals(true, validator.isValid("http://www.example.org/hello..world/"));
        assertEquals(true, validator.isValid("http://www.example.org/hello.world"));
        assertEquals(true, validator.isValid("http://www.example.org/hello..world"));
        assertEquals(true, validator.isValid("http://www.example.org/..world"));
        assertEquals(true, validator.isValid("http://www.example.org/.../world"));
        assertEquals(false, validator.isValid("http://www.example.org/../world"));
        assertEquals(false, validator.isValid("http://www.example.org/.."));
        assertEquals(false, validator.isValid("http://www.example.org/../"));
        assertEquals(false, validator.isValid("http://www.example.org/./.."));
        assertEquals(false, validator.isValid("http://www.example.org/././.."));
        assertEquals(true, validator.isValid("http://www.example.org/..."));
        assertEquals(true, validator.isValid("http://www.example.org/.../"));
        assertEquals(true, validator.isValid("http://www.example.org/.../.."));
        assertEquals(true, validator.isValid("http://www.apache.org/test/index.html"));
        assertEquals(false, validator.isValid("file:///C:/some.file"));
        assertEquals(false, validator.isValid("file:///C:\\some.file"));
        assertEquals(false, validator.isValid("file:///etc/hosts"));
        assertEquals(false, validator.isValid("file://localhost/etc/hosts"));
        assertEquals(false, validator.isValid("file://localhost/c:/some.file"));
        assertEquals(true, validator.isValid("http://www.apache.org/test/index.html"));
        assertEquals(true, validator.isValid("file:///C:/some.file"));
        assertEquals(false, validator.isValid("file:///C:\\some.file"));
        assertEquals(true, validator.isValid("file:///etc/hosts"));
        assertEquals(true, validator.isValid("file://localhost/etc/hosts"));
        assertEquals(true, validator.isValid("file://localhost/c:/some.file"));
        assertEquals(false, validator.isValid("file://C:/some.file"));
        assertEquals(false, validator.isValid("file://C:\\some.file"));
        assertEquals(true, validator.isValid("http://www.apache.org:80/path"));
        assertEquals(true, validator.isValid("http://user:pass@www.apache.org:80/path"));
        assertEquals(true, validator.isValid("http://user:@www.apache.org:80/path"));
        assertEquals(true, validator.isValid("http://user@www.apache.org:80/path"));
        assertEquals(true, validator.isValid("http://us%00er:-._~!$&'()*+,;=@www.apache.org:80/path"));
        assertEquals(false, validator.isValid("http://:pass@www.apache.org:80/path"));
        assertEquals(false, validator.isValid("http://:@www.apache.org:80/path"));
        assertEquals(false, validator.isValid("http://user:pa:ss@www.apache.org/path"));
        assertEquals(false, validator.isValid("http://user:pa@ss@www.apache.org/path"));
        assertEquals(true, validator.isValid("http://www.apache.org:80/path"));
        assertEquals(true, validator.isValid("http://www.apache.org:8/path"));
        assertEquals(true, validator.isValid("http://www.apache.org:/path"));
        assertEquals(true, validator.isValid("http://sample.ondemand.com/"));
        assertEquals(true, validator.isValid("hTtP://sample.ondemand.CoM/"));
        assertEquals(true, validator.isValid("httpS://SAMPLE.ONEMAND.COM/"));
        assertEquals(true, validator.isValid("http://sample.ondemand.com/"));
        assertEquals(true, validator.isValid("hTtP://sample.ondemand.CoM/"));
        assertEquals(true, validator.isValid("httpS://SAMPLE.ONEMAND.COM/"));
        assertEquals(true, validator.isValid("http://www.cnn.com/WORLD/?hpt=sitenav"));
        assertEquals(true, validator.isValid("http://www.cnn.com./WORLD/?hpt=sitenav"));
        assertEquals(false, validator.isValid("http://www.cnn.com../"));
        assertEquals(false, validator.isValid("http://www.cnn.invalid/"));
        assertEquals(false, validator.isValid("http://www.cnn.invalid./"));
        assertEquals(true, validator.isValid("file:///C:/path/to/dir/"));
        assertEquals(true, validator.isValid("http://l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.l.org"));
        assertEquals(true, validator.isValid("http://somewhere.com/pathxyz/file(1).html"));
        assertEquals(true, validator.isValid("http://[FEDC:BA98:7654:3210:FEDC:BA98:7654:3210]:80/index.html"));
        assertEquals(true, validator.isValid("http://[::1]:80/index.html"));
        assertEquals(false, validator.isValid("http://FEDC:BA98:7654:3210:FEDC:BA98:7654:3210:80/index.html"));
        assertEquals(true, validator.isValid("http://localhost/test/index.html"));
        assertEquals(true, validator.isValid("http://first.my-testing/test/index.html"));
        assertEquals(true, validator.isValid("http://sup3r.my-testing/test/index.html"));
        assertEquals(false, validator.isValid("http://broke.my-test/test/index.html"));
        assertEquals(true, validator.isValid("http://www.apache.org/test/index.html"));
        assertEquals(true, validator.isValid("http://localhost/test/index.html"));
        assertEquals(true, validator.isValid("http://machinename/test/index.html"));
        assertEquals(true, validator.isValid("http://www.apache.org/test/index.html"));
        assertEquals(true, validator.isValid("https://www.site.com/a/b/c/banana/file.html?foo=1&bar=2#hello-world"));
        assertEquals(false, validator.isValid("http://google"));
        assertEquals(false, validator.isValid("http://google."));
        assertEquals(false, validator.isValid("http://google.c"));
        assertEquals(false, validator.isValid("http://google.abcdefghi"));
        assertEquals(true, validator.isValid("http://site.com/foo/file.name.ext"));
        assertEquals(true, validator.isValid("http://localhost"));
        assertEquals(false, validator.isValid("google.com"));
        assertEquals(true, validator.isValid("http://site.com"));
        assertEquals(true, validator.isValid("http://www.site.com"));
        assertEquals(true, validator.isValid("https://site.com"));
        assertEquals(true, validator.isValid("https://www.site.com"));
        assertEquals(true, validator.isValid("ftp://site.com"));
        assertEquals(true, validator.isValid("git://site.com"));
        assertEquals(true, validator.isValid("http://123.123.123.123"));
        assertEquals(true, validator.isValid("http://1.123.123.123"));
        assertEquals(true, validator.isValid("http://1.1.123.123"));
        assertEquals(true, validator.isValid("http://1.1.1.123"));
        assertEquals(true, validator.isValid("http://1.1.1.1"));
        assertEquals(true, validator.isValid("http://123.123.123.1"));
        assertEquals(true, validator.isValid("http://123.123.1.1"));
        assertEquals(true, validator.isValid("http://123.1.1.1"));
        assertEquals(false, validator.isValid("http://1.2.3"));
        assertEquals(false, validator.isValid("http://1.2.3."));
        assertEquals(false, validator.isValid("http://123.123.123.1234"));
        assertEquals(false, validator.isValid("http://.123.123.123.123"));
        assertEquals(false, validator.isValid("http://123.123.123.123."));
        assertEquals(false, validator.isValid("http://123.123...123.123"));
        assertEquals(false, validator.isValid("http://123..123..123.123"));
        assertEquals(true, validator.isValid("git://site.com"));
        assertEquals(false, validator.isValid("git://site.com"));
        assertEquals(false, validator.isValid(null));
        assertEquals(false, validator.isValid(false));
        assertEquals(false, validator.isValid(0));
        assertEquals(false, validator.isValid(new Object[] {}));
        assertEquals(false, validator.isValid(""));
        assertEquals(false, validator.isValid(" "));
        assertEquals(false, validator.isValid(" http://www.google.com"));
        assertEquals(false, validator.isValid("http://www.google.com "));
        assertEquals(false, validator.isValid("http://www.google.com/ ncr"));
        assertEquals(false, validator.isValid("http://www.goo gle.com"));
        assertEquals(true, validator.isValid("http://some-site-name.com"));
        assertEquals(true, validator.isValid("http://site.com/foo/photo.jpg"));
        assertEquals(true, validator.isValid("http://site.com/index.html"));
        assertEquals(true, validator.isValid("http://site.com/foo/?"));
        assertEquals(true, validator.isValid("http://site.com/foo/?foo"));
        assertEquals(true, validator.isValid("http://site.com/foo/?foo=bar"));
        assertEquals(true, validator.isValid("http://site.com/foo/?foo=bar&baz=1"));
        assertEquals(true, validator.isValid("http://site.com/foo/?foo=bar&baz=1&"));
        assertEquals(true, validator.isValid("http://www.site.com/one"));
        assertEquals(true, validator.isValid("http://www.site.com/one/"));
        assertEquals(true, validator.isValid("http://www.site.com/one/two"));
        assertEquals(true, validator.isValid("http://www.site.com/one/two/"));
        assertEquals(true, validator.isValid("http://www.site.com/one/two/three/four/five/six"));
        assertEquals(true, validator.isValid("http://site.com/foo#anchor"));
        assertEquals(true, validator.isValid("http://site.com/foo#anchor2-with_several+signs++"));
        assertEquals(true, validator.isValid("http://localhost:8080"));
        assertEquals(true, validator.isValid("postgres://myuser:mypassword@localhost:5432/mydb"));
        assertEquals(false, validator.isValid("http://-site.com"));
        assertEquals(false, validator.isValid("http://.site.com"));
        assertEquals(false, validator.isValid("http:///www.site.com"));
        assertEquals(true, validator.isValid("http://www.daveoncode.com"));
        assertEquals(true, validator.isValid("http://daveoncode.com"));
        assertEquals(true, validator.isValid("http://foobar.dk"));
        assertEquals(true, validator.isValid("http://foobar.museum/foobar"));
        assertEquals(true, validator.isValid("http://fo.com"));
        assertEquals(true, validator.isValid("http://FOO.com"));
        assertEquals(true, validator.isValid("http://foo.com/blah_blah"));
        assertEquals(true, validator.isValid("http://foo.com/blah_blah/"));
        assertEquals(true, validator.isValid("http://foo.com/blah_blah_(wikipedia)"));
        assertEquals(true, validator.isValid("http://foo.com/blah_blah_(wikipedia)_(again)"));
        assertEquals(true, validator.isValid("http://www.example.com/wpstyle/?p=364"));
        assertEquals(true, validator.isValid("https://www.example.com/foo/?bar=baz&inga=42&quux"));
        assertEquals(true, validator.isValid("https://www.example.com?bar=baz"));
        assertEquals(true, validator.isValid("http://\\xe2\\x9c\\xaadf.ws/123"));
        assertEquals(true, validator.isValid("http://userid:password@example.com:8080"));
        assertEquals(true, validator.isValid("http://userid:password@example.com:8080/"));
        assertEquals(true, validator.isValid("http://userid@example.com"));
        assertEquals(true, validator.isValid("http://userid@example.com/"));
        assertEquals(true, validator.isValid("http://userid@example.com:8080"));
        assertEquals(true, validator.isValid("http://userid@example.com:8080/"));
        assertEquals(true, validator.isValid("http://userid:password@example.com"));
        assertEquals(true, validator.isValid("http://userid:password@example.com/"));
        assertEquals(true, validator.isValid("http://142.42.1.1/"));
        assertEquals(true, validator.isValid("http://142.42.1.1:8080/"));
        assertEquals(true, validator.isValid("http://\\xe2\\x9e\\xa1.ws/\\xe4\\xa8\\xb9"));
        assertEquals(true, validator.isValid("http://\\xe2\\x8c\\x98.ws"));
        assertEquals(true, validator.isValid("http://\\xe2\\x8c\\x98.ws/"));
        assertEquals(true, validator.isValid("http://foo.com/blah_(wikipedia)#cite-1"));
        assertEquals(true, validator.isValid("http://foo.com/blah_(wikipedia)_blah#cite-1"));
        assertEquals(true, validator.isValid("http://foo.com/unicode_(\\xe2\\x9c\\xaa)_in_parens"));
        assertEquals(true, validator.isValid("http://foo.com/(something)?after=parens"));
        assertEquals(true, validator.isValid("http://\\xe2\\x98\\xba.damowmow.com/"));
        assertEquals(true, validator.isValid("http://code.google.com/events/#&product=browser"));
        assertEquals(true, validator.isValid("http://j.mp"));
        assertEquals(true, validator.isValid("ftp://foo.bar/baz"));
        assertEquals(true, validator.isValid("http://foo.bar/?q=Test%20URL-encoded%20stuff"));
        assertEquals(true, validator.isValid("http://\\xd9\\x85\\xd8\\xab\\xd8\\xa7\\xd9\\x84.\\xd8\\xa5\\xd8\\xae\\xd8\\xaa\\xd8\\xa8\\xd8\\xa7\\xd8\\xb1"));
        assertEquals(true, validator.isValid("http://\\xe4\\xbe\\x8b\\xe5\\xad\\x90.\\xe6\\xb5\\x8b\\xe8\\xaf\\x95"));
        assertEquals(true, validator.isValid("http://\\xe0\\xa4\\x89\\xe0\\xa4\\xa6\\xe0\\xa4\\xbe\\xe0\\xa4\\xb9\\xe0\\xa4\\xb0\\xe0\\xa4\\xa3.\\xe0\\xa4\\xaa\\xe0\\xa4\\xb0\\xe0\\xa5\\x80\\xe0\\xa4\\x95\\xe0\\xa5\\x8d\\xe0\\xa4\\xb7\\xe0\\xa4\\xbe"));
        assertEquals(true, validator.isValid("http://-.~_!$&'()*+,;=:%40:80%2f::::::@example.com"));
        assertEquals(true, validator.isValid("http://1337.net"));
        assertEquals(true, validator.isValid("http://a.b-c.de"));
        assertEquals(true, validator.isValid("http://223.255.255.254"));
        assertEquals(true, validator.isValid("http://10.1.1.1"));
        assertEquals(true, validator.isValid("http://10.1.1.254"));
        assertEquals(true, validator.isValid("http://127.0.0.1:8080"));
        assertEquals(true, validator.isValid("http://127.0.10.150"));
        assertEquals(true, validator.isValid("http://localhost"));
        assertEquals(true, validator.isValid("http://localhost:8000"));
        assertEquals(true, validator.isValid("http://[FEDC:BA98:7654:3210:FEDC:BA98:7654:3210]:80/index.html"));
        assertEquals(true, validator.isValid("http://[1080:0:0:0:8:800:200C:417A]/index.html"));
        assertEquals(true, validator.isValid("http://[3ffe:2a00:100:7031::1]"));
        assertEquals(true, validator.isValid("http://[1080::8:800:200C:417A]/foo"));
        assertEquals(true, validator.isValid("http://[::192.9.5.5]/ipng"));
        assertEquals(true, validator.isValid("http://[::FFFF:129.144.52.38]:80/index.html"));
        assertEquals(true, validator.isValid("http://[2010:836B:4179::836B:4179]"));
        assertEquals(true, validator.isValid("http://foo.bar"));
        assertEquals(true, validator.isValid("http://username:password@example.com:4010/"));
        assertEquals(true, validator.isValid("http://username:password@112.168.10.10:4010/"));
        assertEquals(true, validator.isValid("http://username:password@192.168.10.10:4010/"));
        assertEquals(true, validator.isValid("http://10.0.10.1"));
        assertEquals(true, validator.isValid("http://127.0.0.1"));
        assertEquals(false, validator.isValid("http://foobar"));
        assertEquals(false, validator.isValid("foobar.dk"));
        assertEquals(false, validator.isValid("http://127.0.0/asdf"));
        assertEquals(false, validator.isValid("http://foobar.d"));
        assertEquals(false, validator.isValid("http://foobar.12"));
        assertEquals(false, validator.isValid("http://foobar"));
        assertEquals(false, validator.isValid("htp://foobar.com"));
        assertEquals(false, validator.isValid("http://foobar..com"));
        assertEquals(false, validator.isValid("http://fo..com"));
        assertEquals(false, validator.isValid("http://"));
        assertEquals(false, validator.isValid("http://."));
        assertEquals(false, validator.isValid("http://.."));
        assertEquals(false, validator.isValid("http://../"));
        assertEquals(false, validator.isValid("http://?"));
        assertEquals(false, validator.isValid("http://??"));
        assertEquals(false, validator.isValid("http://??/"));
        assertEquals(false, validator.isValid("http://#"));
        assertEquals(false, validator.isValid("http://##"));
        assertEquals(false, validator.isValid("http://##/"));
        assertEquals(false, validator.isValid("http://foo.bar?q=Spaces should be encoded"));
        assertEquals(false, validator.isValid("//"));
        assertEquals(false, validator.isValid("//a"));
        assertEquals(false, validator.isValid("///a"));
        assertEquals(false, validator.isValid("///"));
        assertEquals(false, validator.isValid("http:///a"));
        assertEquals(false, validator.isValid("foo.com"));
        assertEquals(false, validator.isValid("rdar://1234"));
        assertEquals(false, validator.isValid("h://test"));
        assertEquals(false, validator.isValid("http:// shouldfail.com"));
        assertEquals(false, validator.isValid(":// should fail"));
        assertEquals(false, validator.isValid("http://foo.bar/foo(bar)baz quux"));
        assertEquals(false, validator.isValid("ftps://foo.bar/"));
        assertEquals(false, validator.isValid("http://-error-.invalid/"));
        assertEquals(false, validator.isValid("http://a.b--c.de/"));
        assertEquals(false, validator.isValid("http://-a.b.co"));
        assertEquals(false, validator.isValid("http://a.b-.co"));
        assertEquals(false, validator.isValid("http://0.0.0.0"));
        assertEquals(false, validator.isValid("http://10.1.1.0"));
        assertEquals(false, validator.isValid("http://10.1.1.255"));
        assertEquals(false, validator.isValid("http://224.1.1.1"));
        assertEquals(false, validator.isValid("http://1.1.1.1.1"));
        assertEquals(false, validator.isValid("http://123.123.123"));
        assertEquals(false, validator.isValid("http://3628126748"));
        assertEquals(false, validator.isValid("http://.www.foo.bar/"));
        assertEquals(false, validator.isValid("http://www.foo.bar./"));
        assertEquals(false, validator.isValid("http://.www.foo.bar./"));
        assertEquals(false, validator.isValid("http://127.12.0.260"));
        assertEquals(false, validator.isValid("http://example.com/\">user@example.com"));
        assertEquals(false, validator.isValid("http://[2010:836B:4179::836B:4179"));
        assertEquals(false, validator.isValid("http://2010:836B:4179::836B:4179"));
        assertEquals(false, validator.isValid("http://2010:836B:4179::836B:4179:80/index.html"));
        assertEquals(false, validator.isValid("http://username:password@192.168.10.10:4010/"));
        assertEquals(false, validator.isValid("http://10.0.10.1"));
        assertEquals(false, validator.isValid("http://127.0.0.1"));
        assertEquals(false, validator.isValid("foo://127.0.0.1"));
        assertEquals(false, validator.isValid("http://username:password@127.0.0.1:8080"));
        assertEquals(false, validator.isValid("http://localhost"));
        assertEquals(false, validator.isValid("http://localhost:8000"));
    }
}